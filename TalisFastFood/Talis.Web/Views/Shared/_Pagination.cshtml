@using Talis.Infrastructure.Commons.Bases.Request
@model BaseFiltersRequest

@{
    var templateLink = string.Concat(Model.BaseURL, "?NumPage={0}&NumRecordsPage={1}");
    var activateButtonNext = Model.NumPage > 1;
    var activateButtonPrevious = Model.NumPage < Model.NumMaxPages;
}

<div class="mt-3">
    <nav>
        <ul class="pagination">
            <li class="page-item d-flex align-items-center @(activateButtonPrevious ? null : "disabled")">
                @if (activateButtonNext)
                {
                    <a class="page-link"
                   href="@string.Format(templateLink, Model.NumPage - 1, Model.NumRecordsPage)">
                        Anterior
                    </a>
                }
                else
                {
                    <span class="page-link">Anterior</span>
                }
            </li>

            @for (var pages = 1; pages <= Model.NumMaxPages; pages++)
            {
                <li class="page-item @(pages == Model.NumPage ? "active" : null)">
                    <a class="page-link"
                   href="@string.Format(templateLink, pages, Model.NumRecordsPage)">
                        @pages
                    </a>
                </li>
            }

            <li class="page-item @(activateButtonNext ? null : "disabled")">
                @if (activateButtonNext)
                {
                    <a class="page-link"
                    href="@string.Format(templateLink, Model.NumPage + 1, Model.NumRecordsPage)">
                        Siguiente
                    </a>
                } else
                {
                    <span class="page-link">Siguiente</span>
                }
            </li>
        </ul>
    </nav>
</div>